[{"path":"index.html","id":"section","chapter":"","heading":"","text":"","code":""},{"path":"index.html","id":"r-for-applied-epidemiology-and-public-health","chapter":"","heading":"R for applied epidemiology and public health","text":"handbook strives :Serve quick R code reference manualProvide task-centered examples addressing common epidemiological problemsAssist epidemiologists transitioning RBe accessible settings low internet-connectivity via offline versionLanguages: Vietnamese (Tiếng Việt)Written epidemiologists, epidemiologists \nApplied Epi non-profit organisation grassroots movement frontline epis around world. write spare time offer resource community. encouragement feedback welcome:Visit website join contact listEmail contact@appliedepi.org tweet @epiRhandbookSubmit issues Github repositoryWe offer live R training instructors decades applied epidemiology experience - email us discuss.","code":""},{"path":"index.html","id":"how-to-use-this-handbook","chapter":"","heading":"How to use this handbook","text":"Browse pages Table Contents, use search boxClick “copy” icons copy codeYou can follow-along example dataSee “Resources” section page materialOffline versionSee instructions Download handbook data page.","code":""},{"path":"index.html","id":"acknowledgements","chapter":"","heading":"Acknowledgements","text":"handbook produced collaboration epidemiologists around world drawing upon experience organizations including local, state, provincial, national health agencies, World Health Organization (), Médecins Sans Frontières / Doctors without Borders (MSF), hospital systems, academic institutions.handbook approved product specific organization. Although strive accuracy, provide guarantee content book.","code":""},{"path":"index.html","id":"contributors","chapter":"","heading":"Contributors","text":"Editor: Neale BatraAuthors: Neale Batra, Alex Spina, Paula Blomquist, Finlay Campbell, Henry Laurenson-Schafer, Isaac Florence, Natalie Fischer, Aminata Ndiaye, Liza Coyer, Jonathan Polonsky, Yurie Izawa, Chris Bailey, Daniel Molling, Isha Berry, Emma Buajitti, Mathilde Mousset, Sara Hollis, Wen LinReviewers supporters: Pat Keating, Amrish Baidjoe, Annick Lenglet, Margot Charette, Danielly Xavier, Marie-Amélie Degail Chabrat, Esther Kukielka, Michelle Sloan, Aybüke Koyuncu, Rachel Burke, Kate Kelsey, Berhe Etsay, John Rossow, Mackenzie Zendt, James Wright, Laura Haskins, Flavio Finger, Tim Taylor, Jae Hyoung Tim Lee, Brianna Bradley, Wayne Enanoria, Manual Albela Miranda, Molly Mantus, Pattama Ulrich, Joseph Timothy, Adam Vaughan, Olivia Varsaneux, Lionel Monteiro, Joao MuiangaIllustrations: Calder Fong","code":""},{"path":"index.html","id":"funding-and-support","chapter":"","heading":"Funding and support","text":"handbook received supportive funding via COVID-19 emergency capacity-building grant TEPHINET, global network Field Epidemiology Training Programs (FETPs).Administrative support provided EPIET Alumni Network (EAN), special thanks Annika Wendland. EPIET European Programme Intervention Epidemiology Training.Special thanks Médecins Sans Frontières (MSF) Operational Centre Amsterdam (OCA) support development handbook.publication supported Cooperative Agreement number NU2GGH001873, funded Centers Disease Control Prevention TEPHINET, program Task Force Global Health. contents solely responsibility authors necessarily represent official views Centers Disease Control Prevention, Department Health Human Services, Task Force Global Health, Inc. TEPHINET.","code":""},{"path":"index.html","id":"inspiration","chapter":"","heading":"Inspiration","text":"multitude tutorials vignettes provided knowledge development handbook content credited within respective pages.generally, following sources provided inspiration handbook:“R4Epis” project (collaboration MSF RECON)R Epidemics Consortium (RECON)R Data Science book (R4DS)bookdown: Authoring Books Technical Documents R MarkdownNetlify hosts website","code":""},{"path":"index.html","id":"terms-of-use-and-contribution","chapter":"","heading":"Terms of Use and Contribution","text":"","code":""},{"path":"index.html","id":"license","chapter":"","heading":"License","text":" Applied Epi Incorporated, 2021 work licensed Applied Epi Incorporated Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.Academic courses epidemiologist training programs welcome use handbook students, please send us email let us know. questions intended use, email epiRhandbook@gmail.com.","code":""},{"path":"index.html","id":"citation","chapter":"","heading":"Citation","text":"Batra, Neale, et al. Epidemiologist R Handbook. 2021. ","code":""},{"path":"index.html","id":"contribution","chapter":"","heading":"Contribution","text":"like make content contribution, please contact us first via Github issues email. implementing schedule updates creating contributor guide.Please note epiRhandbook project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"editorial-and-technical-notes.html","id":"editorial-and-technical-notes","chapter":"1 Editorial and technical notes","heading":"1 Editorial and technical notes","text":"page describe philosophical approach, style, specific editorial decisions made creation handbook.","code":""},{"path":"editorial-and-technical-notes.html","id":"approach-and-style","chapter":"1 Editorial and technical notes","heading":"1.1 Approach and style","text":"potential audience book large. surely used people new R, also experienced R users looking best practices tips. must accessible succinct. Therefore, approach provide just enough text explanation someone new R can apply code follow code .points:code reference book accompanied relatively brief examples - thorough textbook R data scienceThis R handbook use within applied epidemiology - manual methods science applied epidemiologyThis intended living document - optimal R packages given task change often welcome discussion emphasize handbook","code":""},{"path":"editorial-and-technical-notes.html","id":"r-packages","chapter":"1 Editorial and technical notes","heading":"R packages","text":"many choicesOne challenging aspects learning R knowing R package use given task. common occurrence struggle task later realize - hey, ’s R package one command line!handbook, try offer least two ways complete task: one tried--true method (probably base R tidyverse) one special R package custom-built purpose. want couple options case can’t download given package otherwise work .choosing packages use, prioritized R packages approaches tested vetted community, minimize number packages used typical work session, stable (changing often), accomplish task simply cleanlyThis handbook generally prioritizes R packages functions tidyverse. Tidyverse collection R packages designed data science share underlying grammar data structures. tidyverse packages can installed loaded via tidyverse package. Read tidyverse website.applicable, also offer code options using base R - packages functions come R installation. recognize book’s audience may reliable internet download extra packages.Linking functions packages explicitlyIt often frustrating R tutorials function shown code, don’t know package ! try avoid situation.narrative text, package names written bold (e.g. dplyr) functions written like : mutate(). strive explicit package function comes , either referencing package nearby text specifying package explicitly code like : dplyr::mutate(). may look redundant, purpose.See page R basics learn packages functions.","code":""},{"path":"editorial-and-technical-notes.html","id":"code-style","chapter":"1 Editorial and technical notes","heading":"Code style","text":"handbook, frequently utilize “new lines”, making code appear “long”. reasons:can write explanatory comments # adjacent little part codeGenerally, longer (vertical) code easier readIt easier read narrow screen (sideways scrolling needed)indentations, can easier know arguments belong functionAs result, code written like :…written like :R code generally affected new lines indentations. writing code, initiate new line comma apply automatic indentation patterns.also use lots spaces (e.g. n = 1 instead n=1) easier read. kind people reading code!","code":"\nlinelist %>% \n  group_by(hospital) %>%  # group rows by hospital\n  slice_max(date, n = 1, with_ties = F) # if there's a tie (of date), take the first row\nlinelist %>% \n  group_by(hospital) %>% # group rows by hospital\n  slice_max(\n    date,                # keep row per group with maximum date value \n    n = 1,               # keep only the single highest row \n    with_ties = F)       # if there's a tie (of date), take the first row"},{"path":"editorial-and-technical-notes.html","id":"nomenclature","chapter":"1 Editorial and technical notes","heading":"Nomenclature","text":"handbook, generally reference “columns” “rows” instead “variables” “observations”. explained primer “tidy data”, epidemiological statistical datasets consist structurally rows, columns, values.Variables contain values measure underlying attribute (like age group, outcome, date onset). Observations contain values measured unit (e.g. person, site, lab sample). aspects can difficult tangibly define.“tidy” datasets, column variable, row observation, cell single value. However datasets encounter fit mold - “wide” format dataset may variable split across several columns (see example [Pivoting data] page). Likewise, observations split across several rows.handbook managing transforming data, referring concrete data structures rows columns relevant abstract observations variables. Exceptions occur primarily pages data analysis, see references variables observations.","code":""},{"path":"editorial-and-technical-notes.html","id":"notes","chapter":"1 Editorial and technical notes","heading":"Notes","text":"types notes may encounter handbook:NOTE: noteTIP: tip.CAUTION: cautionary note.DANGER: warning.","code":""},{"path":"editorial-and-technical-notes.html","id":"editorial-decisions","chapter":"1 Editorial and technical notes","heading":"1.2 Editorial decisions","text":", track significant editorial decisions around package function choice. disagree want offer new tool consideration, please join/start conversation Github page.Table package, function, editorial decisions","code":""},{"path":"editorial-and-technical-notes.html","id":"major-revisions","chapter":"1 Editorial and technical notes","heading":"1.3 Major revisions","text":"","code":""},{"path":"editorial-and-technical-notes.html","id":"session-info-r-rstudio-packages","chapter":"1 Editorial and technical notes","heading":"1.4 Session info (R, RStudio, packages)","text":"information versions R, RStudio, R packages used rendering Handbook.","code":"\nsessioninfo::session_info()## ─ Session info ────────────────────────────────────────────────────────────────────────────────────────────────────\n##  setting  value\n##  version  R version 4.2.1 (2022-06-23 ucrt)\n##  os       Windows 10 x64 (build 22000)\n##  system   x86_64, mingw32\n##  ui       RStudio\n##  language (EN)\n##  collate  English_United States.utf8\n##  ctype    English_United States.utf8\n##  tz       Europe/Berlin\n##  date     2022-10-23\n##  rstudio  2022.07.1+554 Spotted Wakerobin (desktop)\n##  pandoc   2.18 @ C:/Program Files/RStudio/bin/quarto/bin/tools/ (via rmarkdown)\n## \n## ─ Packages ────────────────────────────────────────────────────────────────────────────────────────────────────────\n##  ! package              * version  date (UTC) lib source\n##  P abind                  1.4-5    2016-07-21 [?] CRAN (R 4.2.0)\n##  P adagio                 0.8.5    2022-10-03 [?] CRAN (R 4.2.1)\n##  P ade4                   1.7-19   2022-04-19 [?] CRAN (R 4.2.1)\n##  P anytime                0.3.9    2020-08-27 [?] CRAN (R 4.2.1)\n##  P ape                    5.6-2    2022-03-02 [?] CRAN (R 4.2.1)\n##  P apyramid             * 0.1.2    2022-08-26 [?] Github (R4EPI/apyramid@c4114cc)\n##  P assertthat             0.2.1    2019-03-21 [?] CRAN (R 4.2.1)\n##  P aweek                  1.0.2    2021-01-04 [?] CRAN (R 4.2.1)\n##  P backports              1.4.1    2021-12-13 [?] CRAN (R 4.2.0)\n##  P base64enc              0.1-3    2015-07-28 [?] CRAN (R 4.2.0)\n##  P bookdown               0.29     2022-09-12 [?] CRAN (R 4.2.1)\n##  P boot                   1.3-28   2021-05-03 [?] CRAN (R 4.2.1)\n##  P broom                  1.0.1    2022-08-29 [?] CRAN (R 4.2.1)\n##  P bslib                  0.4.0    2022-07-16 [?] CRAN (R 4.2.1)\n##  P cachem                 1.0.6    2021-08-19 [?] CRAN (R 4.2.1)\n##  P car                    3.1-1    2022-10-19 [?] CRAN (R 4.2.1)\n##  P carData                3.0-5    2022-01-06 [?] CRAN (R 4.2.1)\n##  P cellranger             1.1.0    2016-07-27 [?] CRAN (R 4.2.1)\n##  P class                  7.3-20   2022-01-16 [?] CRAN (R 4.2.1)\n##  P classInt               0.4-7    2022-06-10 [?] CRAN (R 4.2.1)\n##    cli                    3.4.1    2022-09-23 [1] CRAN (R 4.2.1)\n##  P codetools              0.2-18   2020-11-04 [?] CRAN (R 4.2.1)\n##  P colorspace             2.0-3    2022-02-21 [?] CRAN (R 4.2.1)\n##  P cowplot                1.1.1    2020-12-30 [?] CRAN (R 4.2.1)\n##  P crayon                 1.5.2    2022-09-29 [?] CRAN (R 4.2.1)\n##  P crosstalk              1.2.0    2021-11-04 [?] CRAN (R 4.2.1)\n##  P curl                   4.3.3    2022-10-06 [?] CRAN (R 4.2.1)\n##  P data.table             1.14.4   2022-10-17 [?] CRAN (R 4.2.1)\n##  P DBI                    1.1.3    2022-06-18 [?] CRAN (R 4.2.1)\n##  P dbplyr                 2.2.1    2022-06-27 [?] CRAN (R 4.2.1)\n##  P deldir                 1.0-6    2021-10-23 [?] CRAN (R 4.2.0)\n##  P Deriv                  4.1.3    2021-02-24 [?] CRAN (R 4.2.1)\n##  P DiagrammeR             1.0.9    2022-03-05 [?] CRAN (R 4.2.1)\n##  P digest                 0.6.30   2022-10-18 [?] CRAN (R 4.2.1)\n##  P distcrete              1.0.3    2017-11-23 [?] CRAN (R 4.2.1)\n##  P doBy                   4.6.13   2022-05-02 [?] CRAN (R 4.2.1)\n##  P doParallel             1.0.17   2022-02-07 [?] CRAN (R 4.2.1)\n##    downlit                0.4.2    2022-07-05 [1] CRAN (R 4.2.1)\n##  P dplyr                * 1.0.10   2022-09-01 [?] CRAN (R 4.2.1)\n##  P dsr                    0.2.2    2019-08-23 [?] Github (cran/dsr@f5e1c3f)\n##  P DT                   * 0.24     2022-08-09 [?] CRAN (R 4.2.1)\n##  P e1071                  1.7-11   2022-06-07 [?] CRAN (R 4.2.1)\n##  P ellipsis               0.3.2    2021-04-29 [?] CRAN (R 4.2.1)\n##  P epicontacts            1.1.2    2021-10-21 [?] CRAN (R 4.2.1)\n##  P epikit               * 0.1.4    2022-09-29 [?] Github (R4EPI/epikit@f2f6c6c)\n##  P epitrix                0.2.2    2019-01-15 [?] CRAN (R 4.2.1)\n##  P evaluate               0.17     2022-10-07 [?] CRAN (R 4.2.1)\n##  P FactoClass             1.2.7    2018-10-01 [?] CRAN (R 4.2.1)\n##    fansi                  1.0.3    2022-03-24 [1] CRAN (R 4.2.1)\n##  P farver                 2.1.1    2022-07-06 [?] CRAN (R 4.2.1)\n##  P fastLink               0.6.0    2020-04-29 [?] CRAN (R 4.2.1)\n##  P fastmap                1.1.0    2021-01-25 [?] CRAN (R 4.2.1)\n##  P flextable              0.8.2    2022-09-26 [?] CRAN (R 4.2.1)\n##  P forcats              * 0.5.2    2022-08-19 [?] CRAN (R 4.2.1)\n##  P foreach                1.5.2    2022-02-02 [?] CRAN (R 4.2.1)\n##  P forecast               8.18     2022-10-02 [?] CRAN (R 4.2.1)\n##  P foreign                0.8-82   2022-01-16 [?] CRAN (R 4.2.1)\n##  P fracdiff               1.5-1    2020-01-24 [?] CRAN (R 4.2.1)\n##  P frailtypack            3.5.0    2021-12-20 [?] CRAN (R 4.2.1)\n##  P fs                   * 1.5.2    2021-12-08 [?] CRAN (R 4.2.1)\n##  P gargle                 1.2.0    2021-07-02 [?] CRAN (R 4.2.1)\n##  P gdtools                0.2.4    2022-02-14 [?] CRAN (R 4.2.1)\n##  P generics               0.1.3    2022-07-05 [?] CRAN (R 4.2.1)\n##  P gghighlight            0.3.3    2022-06-06 [?] CRAN (R 4.2.1)\n##  P ggplot2              * 3.3.6    2022-05-03 [?] CRAN (R 4.2.1)\n##  P ggpubr                 0.4.0    2020-06-27 [?] CRAN (R 4.2.1)\n##  P ggrepel                0.9.1    2021-01-15 [?] CRAN (R 4.2.1)\n##  P ggsignif               0.6.4    2022-10-13 [?] CRAN (R 4.2.1)\n##  P ggtext                 0.1.2    2022-09-16 [?] CRAN (R 4.2.1)\n##  P glue                   1.6.2    2022-02-24 [?] CRAN (R 4.2.1)\n##  P googledrive            2.0.0    2021-07-08 [?] CRAN (R 4.2.1)\n##  P googlesheets4          1.0.0    2021-07-21 [?] CRAN (R 4.2.1)\n##  P gridExtra              2.3      2017-09-09 [?] CRAN (R 4.2.1)\n##  P gridtext               0.1.5    2022-09-16 [?] CRAN (R 4.2.1)\n##  P gtable                 0.3.1    2022-09-01 [?] CRAN (R 4.2.1)\n##  P gtools                 3.9.3    2022-07-11 [?] CRAN (R 4.2.1)\n##  P haven                  2.5.1    2022-08-22 [?] CRAN (R 4.2.1)\n##  P here                 * 1.0.1    2020-12-13 [?] CRAN (R 4.2.1)\n##  P highcharter            0.9.4    2022-01-03 [?] CRAN (R 4.2.1)\n##  P highr                  0.9      2021-04-16 [?] CRAN (R 4.2.1)\n##  P hms                    1.1.2    2022-08-19 [?] CRAN (R 4.2.1)\n##  P htmltools              0.5.3    2022-07-18 [?] CRAN (R 4.2.1)\n##  P htmlwidgets            1.5.4    2021-09-08 [?] CRAN (R 4.2.1)\n##  P httr                   1.4.4    2022-08-17 [?] CRAN (R 4.2.1)\n##  P i2extras               0.1.2    2021-07-08 [?] CRAN (R 4.2.1)\n##  P igraph                 1.3.5    2022-09-22 [?] CRAN (R 4.2.1)\n##  P imputeTS               3.3      2022-09-09 [?] CRAN (R 4.2.1)\n##  P incidence              1.7.3    2020-11-04 [?] CRAN (R 4.2.1)\n##  P incidence2             1.2.3    2021-11-07 [?] CRAN (R 4.2.1)\n##  P iterators              1.0.14   2022-02-05 [?] CRAN (R 4.2.1)\n##  P janitor              * 2.1.0    2021-01-05 [?] CRAN (R 4.2.1)\n##  P jquerylib              0.1.4    2021-04-26 [?] CRAN (R 4.2.1)\n##  P jsonlite               1.8.3    2022-10-21 [?] CRAN (R 4.2.1)\n##  P kableExtra             1.3.4    2021-02-20 [?] CRAN (R 4.2.1)\n##  P KernSmooth             2.23-20  2021-05-03 [?] CRAN (R 4.2.1)\n##  P km.ci                  0.5-6    2022-04-06 [?] CRAN (R 4.2.1)\n##  P KMsurv                 0.1-5    2012-12-03 [?] CRAN (R 4.2.0)\n##  P knitr                  1.40     2022-08-24 [?] CRAN (R 4.2.1)\n##  P lattice                0.20-45  2021-09-22 [?] CRAN (R 4.2.1)\n##  P lazyeval               0.2.2    2019-03-15 [?] CRAN (R 4.2.1)\n##  P lifecycle              1.0.3    2022-10-07 [?] CRAN (R 4.2.1)\n##  P linelist               0.0.1    2022-05-13 [?] CRAN (R 4.2.1)\n##  P lmtest                 0.9-40   2022-03-21 [?] CRAN (R 4.2.1)\n##  P lpSolve                5.6.17   2022-10-10 [?] CRAN (R 4.2.1)\n##  P lubridate            * 1.8.0    2021-10-07 [?] CRAN (R 4.2.1)\n##  P lwgeom                 0.2-9    2022-10-01 [?] CRAN (R 4.2.1)\n##  P magrittr               2.0.3    2022-03-30 [?] CRAN (R 4.2.1)\n##  P MASS                   7.3-58.1 2022-08-03 [?] CRAN (R 4.2.1)\n##  P Matrix                 1.5-1    2022-09-13 [?] CRAN (R 4.2.1)\n##  P memoise                2.0.1    2021-11-26 [?] CRAN (R 4.2.1)\n##  P mice                   3.14.0   2021-11-24 [?] CRAN (R 4.2.1)\n##  P microbenchmark         1.4.9    2021-11-09 [?] CRAN (R 4.2.1)\n##  P modelr                 0.1.8    2020-05-19 [?] CRAN (R 4.2.1)\n##  P munsell                0.5.0    2018-06-12 [?] CRAN (R 4.2.1)\n##  P nlme                   3.1-160  2022-10-10 [?] CRAN (R 4.2.1)\n##  P nnet                   7.3-18   2022-09-28 [?] CRAN (R 4.2.1)\n##  P officer                0.4.4    2022-09-09 [?] CRAN (R 4.2.1)\n##  P openxlsx               4.2.5    2021-12-14 [?] CRAN (R 4.2.1)\n##  P pacman                 0.5.1    2019-03-11 [?] CRAN (R 4.2.1)\n##  P PerformanceAnalytics   2.0.4    2020-02-06 [?] CRAN (R 4.2.1)\n##  P PHEindicatormethods    1.4.1    2022-08-08 [?] CRAN (R 4.2.1)\n##  P pillar                 1.8.1    2022-08-19 [?] CRAN (R 4.2.1)\n##  P pkgconfig              2.0.3    2019-09-22 [?] CRAN (R 4.2.1)\n##  P plotly                 4.10.0   2021-10-09 [?] CRAN (R 4.2.1)\n##  P plotrix                3.8-2    2021-09-08 [?] CRAN (R 4.2.0)\n##  P plyr                   1.8.7    2022-03-24 [?] CRAN (R 4.2.1)\n##  P png                    0.1-7    2013-12-03 [?] CRAN (R 4.2.0)\n##  P proxy                  0.4-27   2022-06-09 [?] CRAN (R 4.2.1)\n##  P purrr                * 0.3.5    2022-10-06 [?] CRAN (R 4.2.1)\n##  P quadprog               1.5-8    2019-11-20 [?] CRAN (R 4.2.0)\n##  P Quandl                 2.11.0   2021-08-11 [?] CRAN (R 4.2.1)\n##  P quantmod               0.4.20   2022-04-29 [?] CRAN (R 4.2.1)\n##  P R6                     2.5.1    2021-08-19 [?] CRAN (R 4.2.1)\n##  P raster                 3.5-29   2022-08-14 [?] CRAN (R 4.2.1)\n##  P RColorBrewer           1.1-3    2022-04-03 [?] CRAN (R 4.2.0)\n##  P Rcpp                   1.0.9    2022-07-08 [?] CRAN (R 4.2.1)\n##  P readr                * 2.1.3    2022-10-01 [?] CRAN (R 4.2.1)\n##  P readxl                 1.4.1    2022-08-17 [?] CRAN (R 4.2.1)\n##  P renv                   0.16.0   2022-09-29 [?] CRAN (R 4.2.1)\n##  P repr                   1.1.4    2022-01-04 [?] CRAN (R 4.2.1)\n##  P reprex                 2.0.1    2021-08-05 [?] CRAN (R 4.2.1)\n##  P rio                  * 0.5.29   2021-11-22 [?] CRAN (R 4.2.1)\n##  P rlang                  1.0.6    2022-09-24 [?] CRAN (R 4.2.1)\n##  P rlist                  0.4.6.2  2021-09-03 [?] CRAN (R 4.2.1)\n##  P rmarkdown              2.17     2022-10-07 [?] CRAN (R 4.2.1)\n##  P rootSolve              1.8.2.3  2021-09-29 [?] CRAN (R 4.2.0)\n##    rprojroot              2.0.3    2022-04-02 [1] CRAN (R 4.2.1)\n##  P rstatix                0.7.0    2021-02-13 [?] CRAN (R 4.2.1)\n##  P rstudioapi             0.14     2022-08-22 [?] CRAN (R 4.2.1)\n##  P rvest                  1.0.2    2021-10-16 [?] CRAN (R 4.2.1)\n##  P s2                     1.1.0    2022-07-18 [?] CRAN (R 4.2.1)\n##  P sass                   0.4.2    2022-07-16 [?] CRAN (R 4.2.1)\n##  P scales                 1.2.1    2022-08-20 [?] CRAN (R 4.2.1)\n##  P scatterplot3d          0.3-42   2022-09-08 [?] CRAN (R 4.2.1)\n##  P sessioninfo            1.2.2    2021-12-06 [?] CRAN (R 4.2.1)\n##  P sf                     1.0-8    2022-07-14 [?] CRAN (R 4.2.1)\n##  P skimr                  2.1.4    2022-04-15 [?] CRAN (R 4.2.1)\n##  P slider                 0.2.2    2021-07-01 [?] CRAN (R 4.2.1)\n##  P snakecase              0.11.0   2019-05-25 [?] CRAN (R 4.2.1)\n##  P sp                     1.5-0    2022-06-05 [?] CRAN (R 4.2.1)\n##  P spData                 2.2.0    2022-08-31 [?] CRAN (R 4.2.1)\n##  P spdep                  1.2-7    2022-10-01 [?] CRAN (R 4.2.1)\n##  P stars                  0.5-6    2022-07-21 [?] CRAN (R 4.2.1)\n##  P statmod                1.4.37   2022-08-12 [?] CRAN (R 4.2.1)\n##  P stinepack              1.4      2018-07-30 [?] CRAN (R 4.2.0)\n##  P stringdist             0.9.9    2022-10-20 [?] CRAN (R 4.2.1)\n##  P stringi                1.7.8    2022-07-11 [?] CRAN (R 4.2.1)\n##  P stringr              * 1.4.1    2022-08-20 [?] CRAN (R 4.2.1)\n##  P survC1                 1.0-3    2021-02-10 [?] CRAN (R 4.2.1)\n##  P survival               3.4-0    2022-08-09 [?] CRAN (R 4.2.1)\n##  P survminer              0.4.9    2021-03-09 [?] CRAN (R 4.2.1)\n##  P survMisc               0.5.6    2022-04-07 [?] CRAN (R 4.2.1)\n##  P svglite                2.1.0    2022-02-03 [?] CRAN (R 4.2.1)\n##  P systemfonts            1.0.4    2022-02-11 [?] CRAN (R 4.2.1)\n##  P terra                  1.6-7    2022-08-07 [?] CRAN (R 4.2.1)\n##  P tibble               * 3.1.8    2022-07-22 [?] CRAN (R 4.2.1)\n##  P tidyquant              1.0.5    2022-09-08 [?] CRAN (R 4.2.1)\n##  P tidyr                * 1.2.1    2022-09-08 [?] CRAN (R 4.2.1)\n##  P tidyselect             1.2.0    2022-10-10 [?] CRAN (R 4.2.1)\n##  P tidyverse            * 1.3.2    2022-07-18 [?] CRAN (R 4.2.1)\n##  P timeDate               4021.106 2022-09-30 [?] CRAN (R 4.2.1)\n##  P trending               0.0.3    2021-04-19 [?] CRAN (R 4.2.1)\n##  P tseries                0.10-52  2022-10-10 [?] CRAN (R 4.2.1)\n##  P tsibble                1.1.3    2022-10-09 [?] CRAN (R 4.2.1)\n##  P TTR                    0.24.3   2021-12-12 [?] CRAN (R 4.2.1)\n##  P tzdb                   0.3.0    2022-03-28 [?] CRAN (R 4.2.1)\n##  P units                  0.8-0    2022-02-05 [?] CRAN (R 4.2.1)\n##  P UpSetR                 1.4.0    2019-05-22 [?] CRAN (R 4.2.1)\n##  P urca                   1.3-3    2022-08-29 [?] CRAN (R 4.2.1)\n##  P utf8                   1.2.2    2021-07-24 [?] CRAN (R 4.2.1)\n##  P uuid                   1.1-0    2022-04-19 [?] CRAN (R 4.2.0)\n##  P vctrs                  0.5.0    2022-10-22 [?] CRAN (R 4.2.1)\n##  P viridisLite            0.4.1    2022-08-22 [?] CRAN (R 4.2.1)\n##  P visNetwork             2.1.2    2022-09-29 [?] CRAN (R 4.2.1)\n##  P warp                   0.2.0    2020-10-21 [?] CRAN (R 4.2.1)\n##  P webshot                0.5.3    2022-04-14 [?] CRAN (R 4.2.1)\n##    withr                  2.5.0    2022-03-03 [1] CRAN (R 4.2.1)\n##  P wk                     0.6.0    2022-01-03 [?] CRAN (R 4.2.1)\n##  P xfun                   0.34     2022-10-18 [?] CRAN (R 4.2.1)\n##    xml2                   1.3.3    2021-11-30 [1] CRAN (R 4.2.1)\n##  P xtable                 1.8-4    2019-04-21 [?] CRAN (R 4.2.1)\n##  P xts                    0.12.2   2022-10-16 [?] CRAN (R 4.2.1)\n##  P yaml                   2.3.6    2022-10-18 [?] CRAN (R 4.2.1)\n##  P zip                    2.2.1    2022-09-08 [?] CRAN (R 4.2.1)\n##  P zoo                    1.8-11   2022-09-17 [?] CRAN (R 4.2.1)\n## \n##  [1] C:/Users/neale/Documents/Applied Epi/repos/epiRhandbook_eng/renv/library/R-4.2/x86_64-w64-mingw32\n##  [2] C:/Users/neale/AppData/Local/Temp/RtmpO4bM2l/renv-system-library\n## \n##  P ── Loaded and on-disk path mismatch.\n## \n## ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────"},{"path":"download-handbook-and-data.html","id":"download-handbook-and-data","chapter":"2 Download handbook and data","heading":"2 Download handbook and data","text":"","code":""},{"path":"download-handbook-and-data.html","id":"download-offline-handbook","chapter":"2 Download handbook and data","heading":"2.1 Download offline handbook","text":"can download offline version handbook HTML file can view file web browser even longer internet access. considering offline use Epi R Handbook things consider:open file may take minute two images Table Contents loadThe offline handbook slightly different layout - one long page Table Contents left. search specific terms use Ctrl+f (Cmd-f)See Suggested packages page assist installing appropriate R packages lose internet connectivityInstall R package epirhandbook contains example data (install process described )two ways can download handbook:","code":""},{"path":"download-handbook-and-data.html","id":"use-download-link","chapter":"2 Download handbook and data","heading":"Use download link","text":"quick access, right-click link select “Save link ”.Mac, use Cmd+click. mobile, press hold link select “Save link”. handbook download device. screen raw HTML code appears, ensure followed instructions try Option 2.","code":""},{"path":"download-handbook-and-data.html","id":"use-our-r-package","chapter":"2 Download handbook and data","heading":"Use our R package","text":"offer R package called epirhandbook. includes function download_book() downloads handbook file Github repository computer.package also contains function get_data() downloads example data computer.Run following code install R package epirhandbook Github repository appliedepi. package CRAN, use special function p_install_gh() install Github.Now, load package use current R session:Next, run package’s function download_book() (empty parentheses) download handbook computer. Assuming RStudio, window appear allowing select save location.","code":"\n# install the latest version of the Epi R Handbook package\npacman::p_install_gh(\"appliedepi/epirhandbook\")\n# load the package for use\npacman::p_load(epirhandbook)\n# download the offline handbook to your computer\ndownload_book()"},{"path":"download-handbook-and-data.html","id":"download-data-to-follow-along","chapter":"2 Download handbook and data","heading":"2.2 Download data to follow along","text":"“follow along” handbook pages, can download example data outputs.","code":""},{"path":"download-handbook-and-data.html","id":"use-our-r-package-1","chapter":"2 Download handbook and data","heading":"Use our R package","text":"easiest approach download data install R package epirhandbook. contains function get_data() saves example data folder choice computer.install R package epirhandbook, run following code. package CRAN, use function p_install_gh() install . input referencing Github organisation (“appliedepi”) epirhandbook package.Now, load package use current R session:Next, use package’s function get_data() download example data computer. Run get_data(\"\") get example data, provide specific file name extension within quotes retrieve one file.data already downloaded package, simply need transferred folder computer. pop-window appear, allowing select save folder location. suggest create new “data” folder 30 files (including example data example outputs).used get_data() save file computer, still need import R. See [Import export] page details.wish, can review data used handbook “data” folder Github repository.","code":"\n# install the latest version of the Epi R Handbook package\npacman::p_install_gh(\"appliedepi/epirhandbook\")\n# load the package for use\npacman::p_load(epirhandbook)\n# download all the example data into a folder on your computer\nget_data(\"all\")\n\n# download only the linelist example data into a folder on your computer\nget_data(file = \"linelist_cleaned.rds\")\n# download a specific file into a folder on your computer\nget_data(\"linelist_cleaned.rds\")"},{"path":"download-handbook-and-data.html","id":"download-one-by-one","chapter":"2 Download handbook and data","heading":"Download one-by-one","text":"option involves downloading data file--file Github repository via either link R command specific file. file types allow download button, others can downloaded via R command.","code":""},{"path":"download-handbook-and-data.html","id":"case-linelist","chapter":"2 Download handbook and data","heading":"Case linelist","text":"fictional Ebola outbreak, expanded handbook team ebola_sim practice dataset outbreaks package.Click download “raw” linelist (.xlsx). “raw” case linelist Excel spreadsheet messy data. Use follow-along [Cleaning data core functions] page.Click download “raw” linelist (.xlsx). “raw” case linelist Excel spreadsheet messy data. Use follow-along [Cleaning data core functions] page.Click download “clean” linelist (.rds). Use file pages handbook use linelist. .rds file R-specific file type preserves column classes. ensures minimal cleaning importing data R.Click download “clean” linelist (.rds). Use file pages handbook use linelist. .rds file R-specific file type preserves column classes. ensures minimal cleaning importing data R.related files:Click download “clean” linelist Excel fileClick download “clean” linelist Excel filePart cleaning page uses “cleaning dictionary” (.csv file). can load directly R running following commands:Part cleaning page uses “cleaning dictionary” (.csv file). can load directly R running following commands:","code":"\npacman::p_load(rio) # install/load the rio package\n\n# import the file directly from Github\ncleaning_dict <- import(\"https://github.com/appliedepi/epirhandbook_eng/raw/master/data/case_linelists/cleaning_dict.csv\")"},{"path":"download-handbook-and-data.html","id":"data_malaria","chapter":"2 Download handbook and data","heading":"Malaria count data","text":"data fictional counts malaria cases age group, facility, day. .rds file R-specific file type preserves column classes. ensures minimal cleaning importing data R.\nClick download\nmalaria count data (.rds file)\n","code":""},{"path":"download-handbook-and-data.html","id":"likert-scale-data","chapter":"2 Download handbook and data","heading":"Likert-scale data","text":"fictional data Likert-style survey, used page [Demographic pyramids Likert-scales]. can load data directly R running following commands:","code":"\npacman::p_load(rio) # install/load the rio package\n\n# import the file directly from Github\nlikert_data <- import(\"https://raw.githubusercontent.com/appliedepi/epirhandbook_eng/master/data/likert_data.csv\")"},{"path":"download-handbook-and-data.html","id":"flexdashboard","chapter":"2 Download handbook and data","heading":"Flexdashboard","text":"links file associated page [Dashboards R Markdown]:download R Markdown outbreak dashboard, right-click link (Cmd+click Mac) select “Save link ”.download HTML dashboard, right-click link (Cmd+click Mac) select “Save link ”.","code":""},{"path":"download-handbook-and-data.html","id":"contact-tracing","chapter":"2 Download handbook and data","heading":"Contact Tracing","text":"Contact Tracing page demonstrated analysis contact tracing data, using example data Go.Data. data used page can downloaded .rds files clicking following links:\nClick download\ncase investigation data (.rds file)\n\nClick download\ncontact registration data (.rds file)\n\nClick download\ncontact follow-data (.rds file)\nNOTE: Structured contact tracing data software (e.g. KoBo, DHIS2 Tracker, CommCare) may look different. like contribute alternative sample data content page, please contact us.TIP: deploying Go.Data want connect instance’s API, see Import export page (API section) Go.Data Community Practice.","code":""},{"path":"download-handbook-and-data.html","id":"gis","chapter":"2 Download handbook and data","heading":"GIS","text":"Shapefiles many sub-component files, different file extention. One file “.shp” extension, others may “.dbf”, “.prj”, etc.[GIS basics] page provides links Humanitarian Data Exchange website can download shapefiles directly zipped files.example, health facility points data can downloaded . Download “hotosm_sierra_leone_health_facilities_points_shp.zip”. saved computer, “unzip” folder. see several files different extensions (e.g. “.shp”, “.prj”, “.shx”) - must saved folder computer. import R, provide file path name “.shp” file st_read() sf package (described [GIS basics] page).follow Option 1 download example data (via R package epirhandbook), shapefiles included.Alternatively, can download shapefiles R Handbook Github “data” folder (see “gis” sub-folder). However, aware need download sub-file individually computer. Github, click file individually download clicking “Download” button. , can see shapefile “sle_adm3” consists many files - need downloaded Github.","code":""},{"path":"download-handbook-and-data.html","id":"phylogenetic-trees","chapter":"2 Download handbook and data","heading":"Phylogenetic trees","text":"See page Phylogenetic trees. Newick file phylogenetic tree constructed whole genome sequencing 299 Shigella sonnei samples corresponding sample data (converted text file). Belgian samples resulting data kindly provided Belgian NRC Salmonella Shigella scope project conducted ECDC EUPHEM Fellow, also published manuscript. international data openly available public databases (ncbi) previously published.download “Shigella_tree.txt” phylogenetic tree file, right-click link (Cmd+click Mac) select “Save link ”.download “sample_data_Shigella_tree.csv” additional information sample, right-click link (Cmd+click Mac) select “Save link ”.see new, created subset-tree, right-click link (Cmd+click Mac) select “Save link ”. .txt file download computer.can import .txt files read.tree() ape package, explained page.","code":"\nape::read.tree(\"Shigella_tree.txt\")"},{"path":"download-handbook-and-data.html","id":"standardization","chapter":"2 Download handbook and data","heading":"Standardization","text":"See page [Standardised rates]. can load data directly Github repository internet R session following commands:","code":"\n# install/load the rio package\npacman::p_load(rio) \n\n##############\n# Country A\n##############\n# import demographics for country A directly from Github\nA_demo <- import(\"https://github.com/appliedepi/epirhandbook_eng/raw/master/data/standardization/country_demographics.csv\")\n\n# import deaths for country A directly from Github\nA_deaths <- import(\"https://github.com/appliedepi/epirhandbook_eng/raw/master/data/standardization/deaths_countryA.csv\")\n\n##############\n# Country B\n##############\n# import demographics for country B directly from Github\nB_demo <- import(\"https://github.com/appliedepi/epirhandbook_eng/raw/master/data/standardization/country_demographics_2.csv\")\n\n# import deaths for country B directly from Github\nB_deaths <- import(\"https://github.com/appliedepi/epirhandbook_eng/raw/master/data/standardization/deaths_countryB.csv\")\n\n\n###############\n# Reference Pop\n###############\n# import demographics for country B directly from Github\nstandard_pop_data <- import(\"https://github.com/appliedepi/epirhandbook_eng/raw/master/data/standardization/world_standard_population_by_sex.csv\")"},{"path":"download-handbook-and-data.html","id":"data_outbreak","chapter":"2 Download handbook and data","heading":"Time series and outbreak detection","text":"See page Time series outbreak detection. use campylobacter cases reported Germany 2002-2011, available surveillance R package. (nb. dataset adapted original, 3 months data deleted end 2011 demonstration purposes)\nClick download\n Campylobacter Germany (.xlsx)\nalso use climate data Germany 2002-2011 (temperature degrees celsius rain fail millimetres) . downloaded EU Copernicus satellite reanalysis dataset using ecmwfr package. need download import stars::read_stars() explained time series page.\nClick download\n Germany weather 2002 (.nc file)\n\nClick download\n Germany weather 2003 (.nc file)\n\nClick download\n Germany weather 2004 (.nc file)\n\nClick download\n Germany weather 2005 (.nc file)\n\nClick download\n Germany weather 2006 (.nc file)\n\nClick download\n Germany weather 2007 (.nc file)\n\nClick download\n Germany weather 2008 (.nc file)\n\nClick download\n Germany weather 2009 (.nc file)\n\nClick download\n Germany weather 2010 (.nc file)\n\nClick download\n Germany weather 2011 (.nc file)\n","code":""},{"path":"download-handbook-and-data.html","id":"data_survey","chapter":"2 Download handbook and data","heading":"Survey analysis","text":"survey analysis page use fictional mortality survey data based MSF OCA survey templates. fictional data generated part “R4Epis” project.\nClick download\n Fictional survey data (.xlsx)\n\nClick download\n Fictional survey data dictionary (.xlsx)\n\nClick download\n Fictional survey population data (.xlsx)\n","code":""},{"path":"download-handbook-and-data.html","id":"data_shiny","chapter":"2 Download handbook and data","heading":"Shiny","text":"page [Dashboards Shiny] demonstrates construction simple app display malaria data.download R files produce Shiny app:can \nclick download app.R file contains UI Server code Shiny app.can \nclick download facility_count_data.rds file contains malaria data Shiny app. Note may need store within “data” folder () file paths work correctly.can \nclick download global.R file run prior app opening, explained page.can \nclick download plot_epicurve.R file sourced global.R. Note may need store within “funcs” folder () file paths work correctly.","code":""},{"path":"r-basics.html","id":"r-basics","chapter":"3 R Basics","heading":"3 R Basics","text":"Welcome!page reviews essentials R. intended comprehensive tutorial, provides basics can useful refreshing memory. section Resources learning links comprehensive tutorials.Parts page adapted permission R4Epis project.See page [Transition R] tips switching R STATA, SAS, Excel.","code":""},{"path":"r-basics.html","id":"why-use-r","chapter":"3 R Basics","heading":"3.1 Why use R?","text":"stated R project website, R programming language environment statistical computing graphics. highly versatile, extendable, community-driven.CostR free use! strong ethic community free open-source material.ReproducibilityConducting data management analysis programming language (compared Excel another primarily point-click/manual tool) enhances reproducibility, makes error-detection easier, eases workload.CommunityThe R community users enormous collaborative. New packages tools address real-life problems developed daily, vetted community users. one example, R-Ladies worldwide organization whose mission promote gender diversity R community, one largest organizations R users. likely chapter near !","code":""},{"path":"r-basics.html","id":"key-terms","chapter":"3 R Basics","heading":"3.2 Key terms","text":"RStudio - RStudio Graphical User Interface (GUI) easier use R. Read RStudio section.Objects - Everything store R - datasets, variables, list village names, total population number, even outputs graphs - objects assigned name can referenced later commands. Read Objects section.Functions - function code operation accept inputs returns transformed output. Read Functions section.Packages - R package shareable bundle functions. Read Packages section.Scripts - script document file hold commands. Read Scripts section","code":""},{"path":"r-basics.html","id":"learning","chapter":"3 R Basics","heading":"3.3 Resources for learning","text":"","code":""},{"path":"r-basics.html","id":"resources-within-rstudio","chapter":"3 R Basics","heading":"Resources within RStudio","text":"Help documentationSearch RStudio “Help” tab documentation R packages specific functions. within pane also contains Files, Plots, Packages (typically lower-right pane). shortcut, can also type name package function R console question-mark open relevant Help page. include parentheses.example: ?filter ?diagrammeR.Interactive tutorialsThere several ways learn R interactively within RStudio.RStudio offers Tutorial pane powered learnr R package. Simply install package open tutorial via new “Tutorial” tab upper-right RStudio pane (also contains Environment History tabs).R package swirl offers interactive courses R Console. Install load package, run command swirl() (empty parentheses) R console. see prompts appear Console. Respond typing Console. guide course choice.","code":""},{"path":"r-basics.html","id":"cheatsheets","chapter":"3 R Basics","heading":"Cheatsheets","text":"many PDF “cheatsheets” available RStudio website, example:Factors forcats packageDates times lubridate packageStrings stringr packageiterative opertaions purrr packageData importData transformation cheatsheet dplyr packageR Markdown (create documents like PDF, Word, Powerpoint…)Shiny (build interactive web apps)Data visualization ggplot2 packageCartography (GIS)leaflet package (interactive maps)Python R (reticulate package)online R resource specifically Excel users","code":""},{"path":"r-basics.html","id":"twitter","chapter":"3 R Basics","heading":"Twitter","text":"R vibrant twitter community can learn tips, shortcuts, news - follow accounts:Follow us! @epiRhandbookR Function Day @rfuntionaday incredible resourceR Data Science @rstats4dsRStudio @RStudioRStudio Tips @rstudiotipsR-Bloggers @RbloggersR-ladies @RLadiesGlobalHadley Wickham @hadleywickhamAlso:#epitwitter #rstats","code":""},{"path":"r-basics.html","id":"free-online-resources","chapter":"3 R Basics","heading":"Free online resources","text":"definitive text R Data Science book Garrett Grolemund Hadley WickhamThe R4Epis project website aims “develop standardised data cleaning, analysis reporting tools cover common types outbreaks population-based surveys conducted MSF emergency response setting.” can find R basics training materials, templates RMarkdown reports outbreaks surveys, tutorials help set .","code":""},{"path":"r-basics.html","id":"languages-other-than-english","chapter":"3 R Basics","heading":"Languages other than English","text":"Materiales de RStudio en EspañolIntroduction à R et au tidyverse (Francais)","code":""},{"path":"r-basics.html","id":"installation","chapter":"3 R Basics","heading":"3.4 Installation","text":"","code":""},{"path":"r-basics.html","id":"r-and-rstudio","chapter":"3 R Basics","heading":"R and RStudio","text":"install RVisit website https://www.r-project.org/ download latest version R suitable computer.install RStudioVisit website https://rstudio.com/products/rstudio/download/ download latest free Desktop version RStudio suitable computer.Permissions\nNote install R RStudio drive read write permissions. Otherwise, ability install R packages (frequent occurrence) impacted. encounter problems, try opening RStudio right-clicking icon selecting “Run administrator”. tips can found page [R network drives].update R RStudioYour version R printed R Console start-. can also run sessionInfo().update R, go website mentioned re-install R. Alternatively, can use installr package (Windows) running installr::updateR(). open dialog boxes help download latest R version update packages new R version. details can found installr documentation.aware old R version still exist computer. can temporarily run older version (older “installation”) R clicking “Tools” -> “Global Options” RStudio choosing R version. can useful want use package updated work newest version R.update RStudio, can go website re-download RStudio. Another option click “Help” -> “Check Updates” within RStudio, may show latest updates.see versions R, RStudio, packages used Handbook made, see page Editorial technical notes.","code":""},{"path":"r-basics.html","id":"other-software-you-may-need-to-install","chapter":"3 R Basics","heading":"Other software you may need to install","text":"TinyTeX (compiling RMarkdown document PDF)Pandoc (compiling RMarkdown documents)RTools (building packages R)phantomjs (saving still images animated networks, transmission chains)","code":""},{"path":"r-basics.html","id":"tinytex","chapter":"3 R Basics","heading":"TinyTex","text":"TinyTex custom LaTeX distribution, useful trying produce PDFs R.\nSee https://yihui.org/tinytex/ informaton.install TinyTex R:","code":"\ninstall.packages('tinytex')\ntinytex::install_tinytex()\n# to uninstall TinyTeX, run tinytex::uninstall_tinytex()"},{"path":"r-basics.html","id":"pandoc","chapter":"3 R Basics","heading":"Pandoc","text":"Pandoc document converter, separate software R. comes bundled RStudio need downloaded. helps process converting Rmarkdown documents formats like .pdf adding complex functionality.","code":""},{"path":"r-basics.html","id":"rtools","chapter":"3 R Basics","heading":"RTools","text":"RTools collection software building packages RInstall website: https://cran.r-project.org/bin/windows/Rtools/","code":""},{"path":"r-basics.html","id":"phantomjs","chapter":"3 R Basics","heading":"phantomjs","text":"often used take “screenshots” webpages. example make transmission chain epicontacts package, HTML file produced interactive dynamic. want static image, can useful use webshot package automate process. require external program “phantomjs”. can install phantomjs via webshot package command webshot::install_phantomjs().","code":""},{"path":"r-basics.html","id":"rstudio","chapter":"3 R Basics","heading":"3.5 RStudio","text":"","code":""},{"path":"r-basics.html","id":"rstudio-orientation","chapter":"3 R Basics","heading":"RStudio orientation","text":"First, open RStudio. icons can look similar, sure opening RStudio R.RStudio work must also R installed computer (see installation instructions).RStudio interface (GUI) easier use R. can think R engine vehicle, crucial work, RStudio body vehicle (seats, accessories, etc.) helps actually use engine move forward! can see complete RStudio user-interface cheatsheet (PDF) hereBy default RStudio displays four rectangle panes.TIP: RStudio displays one left pane scripts open yet.Source Pane\npane, default upper-left, space edit, run, save scripts. Scripts contain commands want run. pane can also display datasets (data frames) viewing.Stata users, pane similar -file Data Editor windows.R Console PaneThe R Console, default left lower-left pane R Studio, home R “engine”. commands actually run non-graphic outputs error/warning messages appear. can directly enter run commands R Console, realize commands saved running commands script.familiar Stata, R Console like Command Window also Results Window.Environment Pane\npane, default upper-right, often used see brief summaries objects R Environment current session. objects include imported, modified, created datasets, parameters defined (e.g. specific epi week analysis), vectors lists defined analysis (e.g. names regions). can click arrow next data frame name see variables.Stata, similar Variables Manager window.pane also contains History can see commands can previously. also “Tutorial” tab can complete interactive R tutorials learnr package installed. also “Connections” pane external connections, can “Git” pane choose interface Github.Plots, Viewer, Packages, Help Pane\nlower-right pane includes several important tabs. Typical plot graphics including maps display Plot pane. Interactive HTML outputs display Viewer pane. Help pane can display documentation help files. Files pane browser can used open delete files. Packages pane allows see, install, update, delete, load/unload R packages, see version package . learn packages see packages section .pane contains Stata equivalents Plots Manager Project Manager windows.","code":""},{"path":"r-basics.html","id":"rstudio-settings","chapter":"3 R Basics","heading":"RStudio settings","text":"Change RStudio settings appearance Tools drop-menu, selecting Global Options. can change default settings, including appearance/background color.RestartIf R freezes, can re-start R going Session menu clicking “Restart R”. avoids hassle closing opening RStudio. Everything R environment removed .","code":""},{"path":"r-basics.html","id":"keyboard-shortcuts","chapter":"3 R Basics","heading":"Keyboard shortcuts","text":"useful keyboard shortcuts . See keyboard shortcuts Windows, Max, Linux second page RStudio user interface cheatsheet.TIP: Use Tab key typing engage RStudio’s auto-complete functionality. can prevent spelling errors. Press Tab typing produce drop-menu likely functions objects, based typed far.","code":""},{"path":"r-basics.html","id":"functions","chapter":"3 R Basics","heading":"3.6 Functions","text":"Functions core using R. Functions perform tasks operations. Many functions come installed R, many available download packages (explained packages section), can even write custom functions!basics section functions explains:function workWhat function arguments areHow get help understanding functionA quick note syntax: handbook, functions written code-text open parentheses, like : filter(). explained packages section, functions downloaded within packages. handbook, package names written bold, like dplyr. Sometimes example code may see function name linked explicitly name package two colons (::) like : dplyr::filter(). purpose linkage explained packages section.","code":""},{"path":"r-basics.html","id":"simple-functions","chapter":"3 R Basics","heading":"Simple functions","text":"function like machine receives inputs, action inputs, produces output. output depends function.Functions typically operate upon object placed within function’s parentheses. example, function sqrt() calculates square root number:object provided function also can column dataset (see Objects section detail kinds objects). R can store multiple datasets, need specify dataset column. One way using $ notation link name dataset name column (dataset$column). example , function summary() applied numeric column age dataset linelist, output summary column’s numeric missing values.NOTE: Behind scenes, function represents complex additional code wrapped user one easy command.","code":"\nsqrt(49)## [1] 7\n# Print summary statistics of column 'age' in the dataset 'linelist'\nsummary(linelist$age)##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n##    0.00    6.00   13.00   16.07   23.00   84.00      86"},{"path":"r-basics.html","id":"functions-with-multiple-arguments","chapter":"3 R Basics","heading":"Functions with multiple arguments","text":"Functions often ask several inputs, called arguments, located within parentheses function, usually separated commas.arguments required function work correctly, others optionalOptional arguments default settingsArguments can take character, numeric, logical (TRUE/FALSE), inputsHere fun fictional function, called oven_bake(), example typical function. takes input object (e.g. dataset, example “dough”) performs operations specified additional arguments (minutes = temperature =). output can printed console, saved object using assignment operator <-.realistic example, age_pyramid() command produces age pyramid plot based defined age groups binary split column, gender. function given three arguments within parentheses, separated commas. values supplied arguments establish linelist dataframe use, age_cat5 column count, gender binary column use splitting pyramid color.command can equivalently written , longer style new line argument. style can easier read, easier write “comments” # explain part (commenting extensively good practice!). run longer command can highlight entire command click “Run”, just place cursor first line press Ctrl Enter keys simultaneously.first half argument assignment (e.g. data =) need specified arguments written specific order (specified function’s documentation). code produces exact pyramid , function expects argument order: data frame, age_group variable, split_by variable.complex age_pyramid() command might include optional arguments :Show proportions instead counts (set proportional = TRUE default FALSE)Specify two colors use (pal = short “palette” supplied vector two color names. See objects page function c() makes vector)NOTE: arguments specify parts argument (e.g. proportional = TRUE), order among arguments matter.","code":"\n# Create an age pyramid\nage_pyramid(data = linelist, age_group = \"age_cat5\", split_by = \"gender\")\n# Create an age pyramid\nage_pyramid(\n  data = linelist,        # use case linelist\n  age_group = \"age_cat5\", # provide age group column\n  split_by = \"gender\"     # use gender column for two sides of pyramid\n  )\n# This command will produce the exact same graphic as above\nage_pyramid(linelist, \"age_cat5\", \"gender\")\nage_pyramid(\n  linelist,                    # use case linelist\n  \"age_cat5\",                  # age group column\n  \"gender\",                    # split by gender\n  proportional = TRUE,         # percents instead of counts\n  pal = c(\"orange\", \"purple\")  # colors\n  )"},{"path":"r-basics.html","id":"writing-functions","chapter":"3 R Basics","heading":"Writing Functions","text":"R language oriented around functions, feel empowered write functions. Creating functions brings several advantages:facilitate modular programming - separation code independent manageable piecesReplace repetitive copy--paste, can error proneGive pieces code memorable namesHow write function covered -depth Writing functions page.","code":""},{"path":"r-basics.html","id":"packages","chapter":"3 R Basics","heading":"3.7 Packages","text":"Packages contain functions.R package shareable bundle code documentation contains pre-defined functions. Users R community develop packages time catered specific problems, likely one can help work! install use hundreds packages use R.installation, R contains “base” packages functions perform common elementary tasks. many R users create specialized functions, verified R community can download package use. handbook, package names written bold. One challenging aspects R often many functions packages choose complete given task.","code":""},{"path":"r-basics.html","id":"install-and-load","chapter":"3 R Basics","heading":"Install and load","text":"Functions contained within packages can downloaded (“installed”) computer internet. package downloaded, stored “library”. can access functions contains current R session “loading” package.Think R personal library: download package, library gains new book functions, time want use function book, must borrow (“load”) book library.summary: use functions available R package, 2 steps must implemented:package must installed (), andThe package must loaded (R session)","code":""},{"path":"r-basics.html","id":"your-library","chapter":"3 R Basics","heading":"Your library","text":"“library” actually folder computer, containing folder package installed. Find R installed computer, look folder called “win-library”. example: R\\win-library\\4.0 (4.0 R version - ’ll different library R version ’ve downloaded).can print file path library entering .libPaths() (empty parentheses). becomes especially important working [R network drives].","code":""},{"path":"r-basics.html","id":"install-from-cran","chapter":"3 R Basics","heading":"Install from CRAN","text":"often, R users download packages CRAN. CRAN (Comprehensive R Archive Network) online public warehouse R packages published R community members.worried viruses security downloading package CRAN? Read article topic.","code":""},{"path":"r-basics.html","id":"how-to-install-and-load","chapter":"3 R Basics","heading":"How to install and load","text":"handbook, suggest using pacman package (short “package manager”). offers convenient function p_load() install package necessary load use current R session.syntax quite simple. Just list names packages within p_load() parentheses, separated commas. command install rio, tidyverse, packages yet installed, load use. makes p_load() approach convenient concise sharing scripts others. Note package names case-sensitive.Note used syntax pacman::p_load() explicitly writes package name (pacman) prior function name (p_load()), connected two colons ::. syntax useful also loads pacman package (assuming already installed).alternative base R functions see often. base R function installing package install.packages(). name package install must provided parentheses quotes. want install multiple packages one command, must listed within character vector c().Note: command installs package, load use current session.Installation can also accomplished point--click going RStudio “Packages” pane clicking “Install” searching desired package name.base R function load package use (installed) library(). can load one package time (another reason use p_load()). can provide package name without quotes.check whether package installed /loaded, can view Packages pane RStudio. package installed, shown version number. box checked, loaded current session.Install GithubSometimes, need install package yet available CRAN. perhaps package available CRAN want development version new features yet offered stable published CRAN version. often hosted website github.com free, public-facing code “repository”. Read Github handbook page [Version control collaboration Git Github].download R packages Github, can use function p_load_gh() pacman, install package necessary, load use current R session. Alternatives install include using remotes devtools packages. Read pacman functions package documentation.install Github, provide information. must provide:Github ID repository ownerThe name repository contains package(optional) name “branch” (specific development version) want downloadIn examples , first word quotation marks Github ID repository owner, slash name repository (name package).want install “branch” (version) main branch, add branch name “@”, repository name.difference Github version version computer, action taken. can “force” re-install instead using p_load_current_gh() argument update = TRUE. Read pacman online vignetteInstall ZIP TARYou install package URL:, download computer zipped file:Option 1: using install_local() remotes packageOption 2: using install.packages() base R, providing file path ZIP file setting type = \"source repos = NULL.","code":"\n# Install (if necessary) and load packages for use\npacman::p_load(rio, tidyverse, here)\n# install a single package with base R\ninstall.packages(\"tidyverse\")\n\n# install multiple packages with base R\ninstall.packages(c(\"tidyverse\", \"rio\", \"here\"))\n# load packages for use, with base R\nlibrary(tidyverse)\nlibrary(rio)\nlibrary(here)\n# install/load the epicontacts package from its Github repository\np_load_gh(\"reconhub/epicontacts\")\n# install the \"timeline\" branch of the epicontacts package from Github\np_load_gh(\"reconhub/epicontacts@timeline\")\npackageurl <- \"https://cran.r-project.org/src/contrib/Archive/dsr/dsr_0.2.2.tar.gz\"\ninstall.packages(packageurl, repos=NULL, type=\"source\")\nremotes::install_local(\"~/Downloads/dplyr-master.zip\")\ninstall.packages(\"~/Downloads/dplyr-master.zip\", repos=NULL, type=\"source\")"},{"path":"r-basics.html","id":"code-syntax","chapter":"3 R Basics","heading":"Code syntax","text":"clarity handbook, functions sometimes preceded name package using :: symbol following way: package_name::function_name()package loaded session, explicit style necessary. One can just use function_name(). However writing package name useful function name common may exist multiple packages (e.g. plot()). Writing package name also load package already loaded.","code":"\n# This command uses the package \"rio\" and its function \"import()\" to import a dataset\nlinelist <- rio::import(\"linelist.xlsx\", which = \"Sheet1\")"},{"path":"r-basics.html","id":"function-help","chapter":"3 R Basics","heading":"Function help","text":"read function, can search Help tab lower-right RStudio. can also run command like ?thefunctionname (put name function question mark) Help page appear Help pane. Finally, try searching online resources.","code":""},{"path":"r-basics.html","id":"update-packages","chapter":"3 R Basics","heading":"Update packages","text":"can update packages re-installing . can also click green “Update” button RStudio Packages pane see packages new versions install. aware old code may need updated major revision function works!","code":""},{"path":"r-basics.html","id":"delete-packages","chapter":"3 R Basics","heading":"Delete packages","text":"Use p_delete() pacman, remove.packages() base R. Alternatively, go find folder contains library manually delete folder.","code":""},{"path":"r-basics.html","id":"dependencies","chapter":"3 R Basics","heading":"Dependencies","text":"Packages often depend packages work. called dependencies. dependency fails install, package depending may also fail install.See dependencies package p_depends(), see packages depend p_depends_reverse()","code":""},{"path":"r-basics.html","id":"masked-functions","chapter":"3 R Basics","heading":"Masked functions","text":"uncommon two packages contain function name. example, package dplyr filter() function, package stats. default filter() function depends order packages first loaded R session - later one default command filter().can check order Environment pane R Studio - click drop-“Global Environment” see order packages. Functions packages lower drop-list mask functions name packages appear higher drop-list. first loading package, R warn console masking occurring, can easy miss.ways can fix masking:Specify package name command. example, use dplyr::filter()Re-arrange order packages loaded (e.g. within p_load()), start new R session","code":""},{"path":"r-basics.html","id":"detach-unload","chapter":"3 R Basics","heading":"Detach / unload","text":"detach (unload) package, use command, correct package name one colon. Note may resolve masking.","code":"\ndetach(package:PACKAGE_NAME_HERE, unload=TRUE)"},{"path":"r-basics.html","id":"install-older-version","chapter":"3 R Basics","heading":"Install older version","text":"See guide install older version particular package.","code":""},{"path":"r-basics.html","id":"suggested-packages","chapter":"3 R Basics","heading":"Suggested packages","text":"See page Suggested packages listing packages recommend everyday epidemiology.","code":""},{"path":"r-basics.html","id":"scripts","chapter":"3 R Basics","heading":"3.8 Scripts","text":"Scripts fundamental part programming. documents hold commands (e.g. functions create modify datasets, print visualizations, etc). can save script run later. many advantages storing running commands script (vs. typing commands one--one R console “command line”):Portability - can share work others sending scriptsReproducibility - others know exactly didVersion control - can track changes made colleaguesCommenting/annotation - explain colleagues done","code":""},{"path":"r-basics.html","id":"commenting","chapter":"3 R Basics","heading":"Commenting","text":"script can also annotate (“comment”) around R code. Commenting helpful explain readers . can add comment typing hash symbol (#) writing comment . commented text appear different color R code.code written # run. Therefore, placing # code also useful way temporarily block line code (“comment ”) want delete ). can comment /multiple lines highlighting pressing Ctrl+Shift+c (Cmd+Shift+c Mac).Comment .Break code logical sectionsAccompany code text step--step description (e.g. numbered steps)","code":"\n# A comment can be on a line by itself\n# import data\nlinelist <- import(\"linelist_raw.xlsx\") %>%   # a comment can also come after code\n# filter(age > 50)                          # It can also be used to deactivate / remove a line of code\n  count()"},{"path":"r-basics.html","id":"style","chapter":"3 R Basics","heading":"Style","text":"important conscious coding style - especially working team. advocate tidyverse style guide. also packages styler lintr help conform style.basic points make code readable others:\n* naming objects, use lowercase letters, numbers, underscores _, e.g. my_data\n* Use frequent spaces, including around operators, e.g. n = 1 age_new <- age_old + 3","code":""},{"path":"r-basics.html","id":"example-script","chapter":"3 R Basics","heading":"Example Script","text":"example short R script. Remember, better succinctly explain code comments, colleagues like !","code":""},{"path":"r-basics.html","id":"r-markdown","chapter":"3 R Basics","heading":"R markdown","text":"R markdown script type R script script becomes output document (PDF, Word, HTML, Powerpoint, etc.). incredibly useful versatile tools often used create dynamic automated reports. Even website handbook produced R markdown scripts!worth noting beginner R users can also use R Markdown - intimidated! learn , see handbook page [Reports R Markdown] documents.","code":""},{"path":"r-basics.html","id":"r-notebooks","chapter":"3 R Basics","heading":"R notebooks","text":"difference writing Rmarkdown vs R notebook. However execution document differs slightly. See site details.","code":""},{"path":"r-basics.html","id":"shiny","chapter":"3 R Basics","heading":"Shiny","text":"Shiny apps/websites contained within one script, must named app.R. file three components:user interface (ui)server functionA call shinyApp functionSee handbook page [Dashboards Shiny], online tutorial: Shiny tutorialIn older times, file split two files (ui.R server.R)","code":""},{"path":"r-basics.html","id":"code-folding","chapter":"3 R Basics","heading":"Code folding","text":"can collapse portions code make script easier read., create text header #, write header, follow least 4 either dashes (-), hashes (#) equals (=). done , small arrow appear “gutter” left (row number). can click arrow code next header collapse dual-arrow icon appear place.expand code, either click arrow gutter , dual-arrow icon. also keyboard shortcuts explained RStudio section page.creating headers #, also activate Table Contents bottom script (see ) can use navigate script. can create sub-headers adding # symbols, example # primary, ## seconary, ### tertiary headers.two versions example script. left original commented headers. right, four dashes written header, making collapsible. Two collapsed, can see Table Contents bottom now shows section.areas code automatically eligible folding include “braced” regions brackets { } function definitions conditional blocks (else statements). can read code folding RStudio site.","code":""},{"path":"r-basics.html","id":"working-directory","chapter":"3 R Basics","heading":"3.9 Working directory","text":"working directory root folder location used R work - R looks saves files default. default, save new files outputs location, look files import (e.g. datasets) well.working directory appears grey text top RStudio Console pane. can also print current working directory running getwd() (leave parentheses empty).","code":""},{"path":"r-basics.html","id":"recommended-approach","chapter":"3 R Basics","heading":"Recommended approach","text":"See page [R projects] details recommended approach managing working directory.\ncommon, efficient, trouble-free way manage working directory file paths combine 3 elements [R project][R projects]-oriented workflow:R Project store files (see page [R projects])package locate files (see page [Import export])rio package import/export files (see page [Import export])","code":""},{"path":"r-basics.html","id":"set-by-command","chapter":"3 R Basics","heading":"Set by command","text":"recently, many people learning R taught begin scripts setwd() command. Please instead consider using [R project][R projects]-oriented workflow read reasons using setwd(). brief, work becomes specific computer, file paths used import export files become “brittle”, severely hinders collaboration use code computer. easy alternatives!noted , although recommend approach circumstances, can use command setwd() desired folder file path quotations, example:DANGER: Setting working directory setwd() can “brittle” file path specific one computer. Instead, use file paths relative R Project root directory (package).","code":"\nsetwd(\"C:/Documents/R Files/My analysis\")"},{"path":"r-basics.html","id":"set-manually","chapter":"3 R Basics","heading":"Set manually","text":"set working directory manually (point--click equivalent setwd()), click Session drop-menu go “Set Working Directory” “Choose Directory”. set working directory specific R session. Note: using approach, manually time open RStudio.","code":""},{"path":"r-basics.html","id":"within-an-r-project","chapter":"3 R Basics","heading":"Within an R project","text":"using R project, working directory default R project root folder contains “.rproj” file. apply open RStudio clicking open R Project (file “.rproj” extension).","code":""},{"path":"r-basics.html","id":"working-directory-in-an-r-markdown","chapter":"3 R Basics","heading":"Working directory in an R markdown","text":"R markdown script, default working directory folder Rmarkdown file (.Rmd) saved within. using R project package, apply working directory () explained [R projects] page.want change working directory stand-alone R markdown (R project), use setwd() apply specific code chunk. make change code chunks R markdown, edit setup chunk add root.dir = parameter, :much easier just use R markdown within R project use package.","code":"\nknitr::opts_knit$set(root.dir = 'desired/directorypath')"},{"path":"r-basics.html","id":"providing-file-paths","chapter":"3 R Basics","heading":"Providing file paths","text":"Perhaps common source frustration R beginner (least Windows machine) typing file path import export data. thorough explanation best input file paths [Import export] page, key points:Broken pathsBelow example “absolute” “full address” file path. likely break used another computer. One exception using shared/network drive.Slash directionIf typing file path, aware direction slashes. Use forward slashes (/) separate components (“data/provincial.csv”). Windows users, default way file paths displayed back slashes (\\) - need change direction slash. use package described [R projects] page slash direction issue.Relative file pathsWe generally recommend providing “relative” filepaths instead - , path relative root R Project. can using package explained [R projects] page. relativel filepath might look like :Even using relative file paths within R project, can still use absolute paths import/export data outside R project.","code":"C:/Users/Name/Document/Analytic Software/R/Projects/Analysis2019/data/March2019.csv  \n# Import csv linelist from the data/linelist/clean/ sub-folders of an R project\nlinelist <- import(here(\"data\", \"clean\", \"linelists\", \"marin_country.csv\"))"},{"path":"r-basics.html","id":"objects","chapter":"3 R Basics","heading":"3.10 Objects","text":"Everything R object, R “object-oriented” language. sections explain:create objects (<-)Types objects (e.g. data frames, vectors..)access subparts objects (e.g. variables dataset)Classes objects (e.g. numeric, logical, integer, double, character, factor)","code":""},{"path":"r-basics.html","id":"everything-is-an-object","chapter":"3 R Basics","heading":"Everything is an object","text":"section adapted R4Epis project.\nEverything store R - datasets, variables, list village names, total population number, even outputs graphs - objects assigned name can referenced later commands.object exists assigned value (see assignment section ). assigned value, object appears Environment (see upper right pane RStudio). can operated upon, manipulated, changed, re-defined.","code":""},{"path":"r-basics.html","id":"defining-objects--","chapter":"3 R Basics","heading":"Defining objects (<-)","text":"Create objects assigning value <- operator.\ncan think assignment operator <- words “defined ”. Assignment commands generally follow standard order:object_name <- value (process/calculation produce value)example, may want record current epidemiological reporting week object reference later code. example, object current_week created assigned value \"2018-W10\" (quote marks make character value). object current_week appear RStudio Environment pane (upper-right) can referenced later commands.See R commands output boxes .NOTE: Note [1] R console output simply indicating viewing first item outputCAUTION: object’s value can -written time running assignment command re-define value. Thus, order commands run important.following command re-define value current_week:Equals signs =also see equals signs R code:double equals sign == two objects values asks logical question: “equal ?”.also see equals signs within functions used specify values function arguments (read sections ), example max(age, na.rm = TRUE).can use single equals sign = place <- create define objects, discouraged. can read discouraged .DatasetsDatasets also objects (typically “dataframes”) must assigned names imported. code , object linelist created assigned value CSV file imported rio package import() function.can read importing exporting datasets section [Import export].CAUTION: quick note naming objects:Object names must contain spaces, use underscore (_) period (.) instead space.Object names case-sensitive (meaning Dataset_A different dataset_A).Object names must begin letter (begin number like 1, 2 3).OutputsOutputs like tables plots provide example outputs can saved objects, just printed without saved. cross-tabulation gender outcome using base R function table() can printed directly R console (without saved).table can saved named object. , optionally, can printed.ColumnsColumns dataset also objects can defined, -written, created described section Columns.can use assignment operator base R create new column. , new column bmi (Body Mass Index) created, row new value result mathematical operation row’s value wt_kg ht_cm columns.However, handbook, emphasize different approach defining columns, uses function mutate() dplyr package piping pipe operator (%>%). syntax easier read advantages explained page [Cleaning data core functions]. can read piping Piping section .","code":"\ncurrent_week <- \"2018-W10\"   # this command creates the object current_week by assigning it a value\ncurrent_week                 # this command prints the current value of current_week object in the console## [1] \"2018-W10\"\ncurrent_week <- \"2018-W51\"   # assigns a NEW value to the object current_week\ncurrent_week                 # prints the current value of current_week in the console## [1] \"2018-W51\"\n# linelist is created and assigned the value of the imported CSV file\nlinelist <- import(\"my_linelist.csv\")\n# printed to R console only\ntable(linelist$gender, linelist$outcome)##    \n##     Death Recover\n##   f  1227     953\n##   m  1228     950\n# save\ngen_out_table <- table(linelist$gender, linelist$outcome)\n\n# print\ngen_out_table##    \n##     Death Recover\n##   f  1227     953\n##   m  1228     950\n# create new \"bmi\" column using base R syntax\nlinelist$bmi <- linelist$wt_kg / (linelist$ht_cm/100)^2\n# create new \"bmi\" column using dplyr syntax\nlinelist <- linelist %>% \n  mutate(bmi = wt_kg / (ht_cm/100)^2)"},{"path":"r-basics.html","id":"object-structure","chapter":"3 R Basics","heading":"Object structure","text":"Objects can single piece data (e.g. my_number <- 24), can consist structured data.graphic borrowed online R tutorial. shows common data structures names. included image spatial data, discussed [GIS basics] page.epidemiology (particularly field epidemiology), commonly encounter data frames vectors:Note create vector “stands alone” (part data frame) function c() used combine different elements. example, creating vector colors plot’s color scale: vector_of_colors <- c(\"blue\", \"red2\", \"orange\", \"grey\")","code":""},{"path":"r-basics.html","id":"object-classes","chapter":"3 R Basics","heading":"Object classes","text":"objects stored R class tells R handle object. many possible classes, common ones include:can test class object providing name function class(). Note: can reference specific column within dataset using $ notation separate name dataset name column.Sometimes, column converted different class automatically R. Watch ! example, vector column numbers, character value inserted… entire column change class character.One common example manipulating data frame order print table - make total row try paste/glue together percents cell numbers (e.g. 23 (40%)), entire numeric column convert character can longer used mathematical calculations.Sometimes, need convert objects columns another class.Likewise, base R functions check whether object specific class, .numeric(), .character(), .double(), .factor(), .integer()online material classes data structures R.","code":"\nclass(linelist)         # class should be a data frame or tibble## [1] \"data.frame\"\nclass(linelist$age)     # class should be numeric## [1] \"numeric\"\nclass(linelist$gender)  # class should be character## [1] \"character\"\nnum_vector <- c(1,2,3,4,5) # define vector as all numbers\nclass(num_vector)          # vector is numeric class## [1] \"numeric\"\nnum_vector[3] <- \"three\"   # convert the third element to a character\nclass(num_vector)          # vector is now character class## [1] \"character\""},{"path":"r-basics.html","id":"columnsvariables","chapter":"3 R Basics","heading":"Columns/Variables ($)","text":"column data frame technically “vector” (see table ) - series values must class (either character, numeric, logical, etc).vector can exist independent data frame, example vector column names want include explanatory variables model. create “stand alone” vector, use c() function :Columns data frame also vectors can called, referenced, extracted, created using $ symbol. $ symbol connects name column name data frame. handbook, try use word “column” instead “variable”.typing name dataframe followed $ also see drop-menu columns data frame. can scroll using arrow key, select one Enter key, avoid spelling mistakes!ADVANCED TIP: complex objects (e.g. list, epicontacts object) may multiple levels can accessed multiple dollar signs. example epicontacts$linelist$date_onset","code":"\n# define the stand-alone vector of character values\nexplanatory_vars <- c(\"gender\", \"fever\", \"chills\", \"cough\", \"aches\", \"vomit\")\n\n# print the values in this named vector\nexplanatory_vars## [1] \"gender\" \"fever\"  \"chills\" \"cough\"  \"aches\"  \"vomit\"\n# Retrieve the length of the vector age_years\nlength(linelist$age) # (age is a column in the linelist data frame)"},{"path":"r-basics.html","id":"accessindex-with-brackets","chapter":"3 R Basics","heading":"Access/index with brackets ([ ])","text":"may need view parts objects, also called “indexing”, often done using square brackets [ ]. Using $ dataframe access column also type indexing.Square brackets also work return specific parts returned output, output summary() function:Brackets also work data frames view specific rows columns. can using syntax dataframe[rows, columns]:Note can also achieve row/column indexing data frames tibbles using dplyr syntax (functions filter() rows, select() columns). Read core functions [Cleaning data core functions] page.filter based “row number”, can use dplyr function row_number() open parentheses part logical filtering statement. Often use %% operator range numbers part logical statement, shown . see first N rows, can also use special dplyr function head().indexing object class list, single brackets always return class list, even single object returned. Double brackets, however, can used access single element return different class list.\nBrackets can also written one another, demonstrated .visual explanation lists indexing, pepper shakers humorous helpful.list looks printed console. See two named elements:hospitals, character vectoraddresses, data frame addressesNow extract, using various methods:","code":"\nmy_vector <- c(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\")  # define the vector\nmy_vector[5]                                  # print the 5th element## [1] \"e\"\n# All of the summary\nsummary(linelist$age)##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n##    0.00    6.00   13.00   16.07   23.00   84.00      86\n# Just the second element of the summary, with name (using only single brackets)\nsummary(linelist$age)[2]## 1st Qu. \n##       6\n# Just the second element, without name (using double brackets)\nsummary(linelist$age)[[2]]## [1] 6\n# Extract an element by name, without showing the name\nsummary(linelist$age)[[\"Median\"]]## [1] 13\n# View a specific row (2) from dataset, with all columns (don't forget the comma!)\nlinelist[2,]\n\n# View all rows, but just one column\nlinelist[, \"date_onset\"]\n\n# View values from row 2 and columns 5 through 10\nlinelist[2, 5:10] \n\n# View values from row 2 and columns 5 through 10 and 18\nlinelist[2, c(5:10, 18)] \n\n# View rows 2 through 20, and specific columns\nlinelist[2:20, c(\"date_onset\", \"outcome\", \"age\")]\n\n# View rows and columns based on criteria\n# *** Note the dataframe must still be named in the criteria!\nlinelist[linelist$age > 25 , c(\"date_onset\", \"outcome\", \"age\")]\n\n# Use View() to see the outputs in the RStudio Viewer pane (easier to read) \n# *** Note the capital \"V\" in View() function\nView(linelist[2:20, \"date_onset\"])\n\n# Save as a new object\nnew_table <- linelist[2:20, c(\"date_onset\")] \n# View first 100 rows\nlinelist %>% head(100)\n\n# Show row 5 only\nlinelist %>% filter(row_number() == 5)\n\n# View rows 2 through 20, and three specific columns (note no quotes necessary on column names)\nlinelist %>% filter(row_number() %in% 2:20) %>% select(date_onset, outcome, age)\n# define demo list\nmy_list <- list(\n  # First element in the list is a character vector\n  hospitals = c(\"Central\", \"Empire\", \"Santa Anna\"),\n  \n  # second element in the list is a data frame of addresses\n  addresses   = data.frame(\n    street = c(\"145 Medical Way\", \"1048 Brown Ave\", \"999 El Camino\"),\n    city   = c(\"Andover\", \"Hamilton\", \"El Paso\")\n    )\n  )\nmy_list## $hospitals\n## [1] \"Central\"    \"Empire\"     \"Santa Anna\"\n## \n## $addresses\n##            street     city\n## 1 145 Medical Way  Andover\n## 2  1048 Brown Ave Hamilton\n## 3   999 El Camino  El Paso\nmy_list[1] # this returns the element in class \"list\" - the element name is still displayed## $hospitals\n## [1] \"Central\"    \"Empire\"     \"Santa Anna\"\nmy_list[[1]] # this returns only the (unnamed) character vector## [1] \"Central\"    \"Empire\"     \"Santa Anna\"\nmy_list[[\"hospitals\"]] # you can also index by name of the list element## [1] \"Central\"    \"Empire\"     \"Santa Anna\"\nmy_list[[1]][3] # this returns the third element of the \"hospitals\" character vector## [1] \"Santa Anna\"\nmy_list[[2]][1] # This returns the first column (\"street\") of the address data frame##            street\n## 1 145 Medical Way\n## 2  1048 Brown Ave\n## 3   999 El Camino"},{"path":"r-basics.html","id":"remove-objects","chapter":"3 R Basics","heading":"Remove objects","text":"can remove individual objects R environment putting name rm() function (quote marks):can remove objects (clear workspace) running:","code":"\nrm(object_name)\nrm(list = ls(all = TRUE))"},{"path":"r-basics.html","id":"piping","chapter":"3 R Basics","heading":"3.11 Piping (%>%)","text":"Two general approaches working objects :Pipes/tidyverse - pipes send object function function - emphasis action, objectDefine intermediate objects - object re-defined - emphasis object","code":""},{"path":"r-basics.html","id":"pipes","chapter":"3 R Basics","heading":"Pipes","text":"Simply explained, pipe operator (%>%) passes intermediate output one function next.\ncan think saying “”. Many functions can linked together %>%.Piping emphasizes sequence actions, object actions performed onPipes best sequence actions must performed one objectPipes come package magrittr, automatically included packages dplyr tidyversePipes can make code clean easier read, intuitiveRead approach tidyverse style guideHere fake example comparison, using fictional functions “bake cake”. First, pipe method:another link describing utility pipes.Piping base function. use piping, magrittr package must installed loaded (typically done loading tidyverse dplyr package include ). can read piping magrittr documentation.Note just like R commands, pipes can used just display result, save/re-save object, depending whether assignment operator <- involved. See :%<>%\n“assignment pipe” magrittr package, pipes object forward also re-defines object. must first pipe operator chain. shorthand. two commands equivalent:","code":"\n# A fake example of how to bake a cake using piping syntax\n\ncake <- flour %>%       # to define cake, start with flour, and then...\n  add(eggs) %>%   # add eggs\n  add(oil) %>%    # add oil\n  add(water) %>%  # add water\n  mix_together(         # mix together\n    utensil = spoon,\n    minutes = 2) %>%    \n  bake(degrees = 350,   # bake\n       system = \"fahrenheit\",\n       minutes = 35) %>%  \n  let_cool()            # let it cool down\n# Create or overwrite object, defining as aggregate counts by age category (not printed)\nlinelist_summary <- linelist %>% \n  count(age_cat)\n# Print the table of counts in the console, but don't save it\nlinelist %>% \n  count(age_cat)##   age_cat    n\n## 1     0-4 1095\n## 2     5-9 1095\n## 3   10-14  941\n## 4   15-19  743\n## 5   20-29 1073\n## 6   30-49  754\n## 7   50-69   95\n## 8     70+    6\n## 9    <NA>   86\nlinelist <- linelist %>%\n  filter(age > 50)\n\nlinelist %<>% filter(age > 50)"},{"path":"r-basics.html","id":"define-intermediate-objects","chapter":"3 R Basics","heading":"Define intermediate objects","text":"approach changing objects/dataframes may better :need manipulate multiple objectsThere intermediate steps meaningful deserve separate object namesRisks:Creating new objects step means creating lots objects. use wrong one might realize !Naming objects can confusingErrors may easily detectableEither name intermediate object, overwrite original, combine functions together. come risks.fake “cake” example , using style:Combine functions together - difficult read:","code":"\n# a fake example of how to bake a cake using this method (defining intermediate objects)\nbatter_1 <- left_join(flour, eggs)\nbatter_2 <- left_join(batter_1, oil)\nbatter_3 <- left_join(batter_2, water)\n\nbatter_4 <- mix_together(object = batter_3, utensil = spoon, minutes = 2)\n\ncake <- bake(batter_4, degrees = 350, system = \"fahrenheit\", minutes = 35)\n\ncake <- let_cool(cake)\n# an example of combining/nesting mutliple functions together - difficult to read\ncake <- let_cool(bake(mix_together(batter_3, utensil = spoon, minutes = 2), degrees = 350, system = \"fahrenheit\", minutes = 35))"},{"path":"r-basics.html","id":"operators","chapter":"3 R Basics","heading":"3.12 Key operators and functions","text":"section details operators R, :Definitional operatorsRelational operators (less , equal ..)Logical operators (, …)Handling missing valuesMathematical operators functions (+/-, >, sum(), median(), …)%% operator","code":""},{"path":"r-basics.html","id":"assignment-operators","chapter":"3 R Basics","heading":"Assignment operators","text":"<-basic assignment operator R <-. object_name <- value.\nassignment operator can also written =. advise use <- general R use.\nalso advise surrounding operators spaces, readability.<<-Writing functions, using R interactive way sourced scripts, may need use assignment operator <<- (base R). operator used define object higher ‘parent’ R Environment. See online reference.%<>%“assignment pipe” magrittr package, pipes object forward also re-defines object. must first pipe operator chain. shorthand, shown two equivalent examples:equivalent :%<+%used add data phylogenetic trees ggtree package. See page Phylogenetic trees online resource book.","code":"\nlinelist <- linelist %>% \n  mutate(age_months = age_years * 12)\nlinelist %<>% mutate(age_months = age_years * 12)"},{"path":"r-basics.html","id":"relational-and-logical-operators","chapter":"3 R Basics","heading":"Relational and logical operators","text":"Relational operators compare values often used defining new variables subsets datasets. common relational operators R:Logical operators, , often used connect relational operators create complicated criteria. Complex statements might require parentheses ( ) grouping order application.example, , linelist two variables want use create case definition, hep_e_rdt, test result other_cases_in_hh, tell us cases household. command uses function case_when() create new variable case_def :Note R case-sensitive, “Positive” different “positive”…","code":"\nlinelist_cleaned <- linelist %>%\n  mutate(case_def = case_when(\n    is.na(rdt_result) & is.na(other_case_in_home)            ~ NA_character_,\n    rdt_result == \"Positive\"                                 ~ \"Confirmed\",\n    rdt_result != \"Positive\" & other_cases_in_home == \"Yes\"  ~ \"Probable\",\n    TRUE                                                     ~ \"Suspected\"\n  ))"},{"path":"r-basics.html","id":"missing-values","chapter":"3 R Basics","heading":"Missing values","text":"R, missing values represented special value NA (“reserved” value) (capital letters N - quotation marks). import data records missing data another way (e.g. 99, “Missing”, .), may want re-code values NA. addressed [Import export] page.test whether value NA, use special function .na(), returns TRUE FALSE.Read missing, infinite, NULL, impossible values page [Missing data]. Learn convert missing values importing data page [Import export].","code":"\nrdt_result <- c(\"Positive\", \"Suspected\", \"Positive\", NA)   # two positive cases, one suspected, and one unknown\nis.na(rdt_result)  # Tests whether the value of rdt_result is NA## [1] FALSE FALSE FALSE  TRUE"},{"path":"r-basics.html","id":"mathematics-and-statistics","chapter":"3 R Basics","heading":"Mathematics and statistics","text":"operators functions page automatically available using base R.","code":""},{"path":"r-basics.html","id":"mathematical-operators","chapter":"3 R Basics","heading":"Mathematical operators","text":"often used perform addition, division, create new columns, etc. common mathematical operators R. Whether put spaces around operators important.","code":""},{"path":"r-basics.html","id":"mathematical-functions","chapter":"3 R Basics","heading":"Mathematical functions","text":"Note: round() digits = specifies number decimal placed. Use signif() round number significant figures.","code":""},{"path":"r-basics.html","id":"scientific-notation","chapter":"3 R Basics","heading":"Scientific notation","text":"likelihood scientific notation used depends value scipen option.documentation ?options: scipen penalty applied deciding print numeric values fixed exponential notation. Positive values bias towards fixed negative towards scientific notation: fixed notation preferred unless ‘scipen’ digits wider.set low number (e.g. 0) “turned ” always. “turn ” scientific notation R session, set high number, example:","code":"\n# turn off scientific notation\noptions(scipen=999)"},{"path":"r-basics.html","id":"rounding","chapter":"3 R Basics","heading":"Rounding","text":"DANGER: round() uses “banker’s rounding” rounds .5 upper number even. Use round_half_up() janitor consistently round halves nearest whole number. See explanation","code":"\n# use the appropriate rounding function for your work\nround(c(2.5, 3.5))## [1] 2 4\njanitor::round_half_up(c(2.5, 3.5))## [1] 3 4"},{"path":"r-basics.html","id":"statistical-functions","chapter":"3 R Basics","heading":"Statistical functions","text":"CAUTION: functions default include missing values calculations. Missing values result output NA, unless argument na.rm = TRUE specified. can written shorthand na.rm = T.Notes:*quantile(): x numeric vector examine, probs = numeric vector probabilities within 0 1.0, e.g c(0.5, 0.8, 0.85)**summary(): gives summary numeric vector including mean, median, common percentilesDANGER: providing vector numbers one functions, sure wrap numbers within c() .","code":"\n# If supplying raw numbers to a function, wrap them in c()\nmean(1, 6, 12, 10, 5, 0)    # !!! INCORRECT !!!  ## [1] 1\nmean(c(1, 6, 12, 10, 5, 0)) # CORRECT## [1] 5.666667"},{"path":"r-basics.html","id":"other-useful-functions","chapter":"3 R Basics","heading":"Other useful functions","text":"","code":""},{"path":"r-basics.html","id":"in","chapter":"3 R Basics","heading":"%in%","text":"useful operator matching values, quickly assessing value within vector dataframe.ask value %% vector, put exclamation mark (!) front logic statement:%% useful using dplyr function case_when(). can define vector previously, reference later. example:Note: want detect partial string, perhaps using str_detect() stringr, accept character vector like c(\"1\", \"Yes\", \"yes\", \"y\"). Instead, must given regular expression - one condensed string bars, “1|Yes|yes|y”. example, str_detect(hospitalized, \"1|Yes|yes|y\"). See page [Characters strings] information.can convert character vector named regular expression command:","code":"\nmy_vector <- c(\"a\", \"b\", \"c\", \"d\")\n\"a\" %in% my_vector## [1] TRUE\n\"h\" %in% my_vector## [1] FALSE\n# to negate, put an exclamation in front\n!\"a\" %in% my_vector## [1] FALSE\n!\"h\" %in% my_vector## [1] TRUE\naffirmative <- c(\"1\", \"Yes\", \"YES\", \"yes\", \"y\", \"Y\", \"oui\", \"Oui\", \"Si\")\n\nlinelist <- linelist %>% \n  mutate(child_hospitaled = case_when(\n    hospitalized %in% affirmative & age < 18 ~ \"Hospitalized Child\",\n    TRUE                                      ~ \"Not\"))\naffirmative <- c(\"1\", \"Yes\", \"YES\", \"yes\", \"y\", \"Y\", \"oui\", \"Oui\", \"Si\")\naffirmative## [1] \"1\"   \"Yes\" \"YES\" \"yes\" \"y\"   \"Y\"   \"oui\" \"Oui\" \"Si\"\n# condense to \naffirmative_str_search <- paste0(affirmative, collapse = \"|\")  # option with base R\naffirmative_str_search <- str_c(affirmative, collapse = \"|\")   # option with stringr package\n\naffirmative_str_search## [1] \"1|Yes|YES|yes|y|Y|oui|Oui|Si\""},{"path":"r-basics.html","id":"errors-warnings","chapter":"3 R Basics","heading":"3.13 Errors & warnings","text":"section explains:difference errors warningsGeneral syntax tips writing R codeCode assistsCommon errors warnings troubleshooting tips can found page [Errors help].","code":""},{"path":"r-basics.html","id":"error-versus-warning","chapter":"3 R Basics","heading":"Error versus Warning","text":"command run, R Console may show warning error messages red text.warning means R completed command, take additional steps produced unusual output aware .warning means R completed command, take additional steps produced unusual output aware .error means R able complete command.error means R able complete command.Look clues:error/warning message often include line number problem.error/warning message often include line number problem.object “unknown” “found”, perhaps spelled incorrectly, forgot call package library(), forgot re-run script making changes.object “unknown” “found”, perhaps spelled incorrectly, forgot call package library(), forgot re-run script making changes.else fails, copy error message Google along key terms - chances someone else worked already!","code":""},{"path":"r-basics.html","id":"general-syntax-tips","chapter":"3 R Basics","heading":"General syntax tips","text":"things remember writing commands R, avoid errors warnings:Always close parentheses - tip: count number opening “(” closing parentheses “)” code chunkAvoid spaces column object names. Use underscore ( _ ) periods ( . ) insteadKeep track remember separate function’s arguments commasR case-sensitive, meaning Variable_A different variable_A","code":""},{"path":"r-basics.html","id":"code-assists","chapter":"3 R Basics","heading":"Code assists","text":"script (RMarkdown otherwise) give clues made mistake. example, forgot write comma needed, close parentheses, RStudio raise flag line, right side script, warn .","code":""}]
